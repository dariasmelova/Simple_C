// a program that sorts array's values into ascending order

#include <stdio.h>
#define SIZE 10

// function main begins program execution
int main(void)
{
	// initialize a
	int a[SIZE] = { 302, 102, 400, 109, 10, 12, 11, 68, 14, 23 };
	int pass; // passes counter
	int i; // comparisons counter
	int hold; // temporary location used to swap array elements

	puts("Data items in original order");

	// output original array
	for (i = 0; i < SIZE; ++i) {
		printf("%4d", a[i]);
	} // end for

	// bubble sort                                         
              
	for (pass = SIZE - 1; pass > 0; --pass) {
		hold = 0;
		// loop to control number of i per pass   
		for (i = 0; i < pass; ++i) { // check all elements, then all except the last, and so on

			// compare adjacent elements and swap them if first 
			// element is greater than second element           
			if (a[i] > a[i + 1]) {
				hold = a[i];
				a[i] = a[i + 1];
				a[i + 1] = hold;
			} // end if                                      
		} // end inner for                                  
		
		    /* if none swaps has been made this time, then the data is already in the proper order, 
		    so the loop should terminate */
			if (hold == 0) {
			printf("\n\n%d passes have been done.\n", pass);
			break;
		}
	} // end outer for                                     

	puts("\nData items in ascending order");

	// output sorted array
	for (i = 0; i < SIZE; ++i) {
		printf("%4d", a[i]);
	} // end for

	puts("");
} // end main
