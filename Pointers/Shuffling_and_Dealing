// a program that shuffles and deals the deck

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define SUITS 4
#define FACES 13
#define CARDS 52

void shuffle(unsigned int wDeck[][FACES]); // shuffling modifies wDeck
void deal(unsigned int wDeck[][FACES], const char* wFace[],
	const char* wSuit[]); // dealing doesn't modify the arrays

int main(void)
{	                  
	const char* suit[SUITS] =
	{ "Hearts", "Diamonds", "Clubs", "Spades" };
		                 
	const char* face[FACES] =
	{ "Ace", "Deuce", "Three", "Four",
	  "Five", "Six", "Seven", "Eight",
	  "Nine", "Ten", "Jack", "Queen", "King" };

	unsigned int deck[SUITS][FACES] = { 0 };

	srand(time(NULL));

	shuffle(deck); // shuffle the deck
	deal(deck, face, suit); // deal the deck
} 

void shuffle(unsigned int wDeck[][FACES])
{
	size_t row; 
	size_t column; 
	size_t card; 

	// for each of the cards, choose slot of deck randomly
	for (card = 1; card <= CARDS; ++card) {

		// choose new random location until unoccupied slot found
		do {
			row = rand() % SUITS;
			column = rand() % FACES;
		} while (wDeck[row][column] != 0); 

		// place card number in chosen slot of deck
		wDeck[row][column] = card;
	} 
} 

void deal(unsigned int wDeck[][FACES], const char* wFace[],
	const char* wSuit[])
{
	size_t card;
	size_t row; 
	size_t column; 

	for (card = 1; card <= CARDS; ++card) {
		// loop through rows of wDeck
		for (row = 0; row < SUITS; ++row) {
			// loop through columns of wDeck for current row
			for (column = 0; column < FACES; ++column) {
				// if slot contains current card, display card
				if (wDeck[row][column] == card) {
					printf("%5s of %-8s%c", wFace[column], wSuit[row],
						card % 2 == 0 ? '\n' : '\t'); 
				} 
			} 
		} 
	} 
} 
